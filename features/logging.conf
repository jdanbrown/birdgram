# Using this horribly boilerplatey format so that gunicorn can also parse it
# - Passed to logging.config.fileConfig in api.app.init_logging
# - bin/_run-gunicorn (e.g. prod) also passes to --log-config for gunicorn logging that happens before main:app

[handlers]
keys = console

[handler_console]
class     = logging.StreamHandler
formatter = the_only_formatter
args      = (sys.stdout, )

[formatters]
keys = the_only_formatter

[formatter_the_only_formatter]

# WARNING Even though we can %(module)s here, maintain the get_logger(__name__) idiom else we can't control log levels!
#   - TODO Tightly coupled to BasicRenderer in api.app -- decouple these (will require lots of slog work)
format = %(levelname)-8s [%(asctime)s.%(msecs)03d] [%(process)5d]%(lineno)4d %(name)s.%(funcName)s%(message)s

# TODO Add a way to switch on $BUBO_ROLE: show date for 'api', hide date for 'notebook'
# datefmt = %Y-%m-%dT%H:%M:%S
datefmt = %H:%M:%S

# NOTE To add a new logger:
#   1. Add to keys, here
#   2. Add a [logger_*], below
[loggers]
keys =
    root,
    gunicorn.error,
    gunicorn.access,
    requests.packages.urllib3.connectionpool,
    boto,
    PIL

[logger_root]
handlers = console
level    = DEBUG

# gunicorn does something weird with its logging such that we _have_ to specify loggers with qualname=gunicorn.access
# and qualname=gunicorn.error or else access/error logs simply won't show up, even when the root logger is level=DEBUG.
# Also, we have to propagate=0 or else its logs will show up twice (presumably the second time at the root logger). I
# have no idea why any of this, but I just wasted a couple hours figuring it out.
# - Based on https://github.com/benoitc/gunicorn/blob/master/examples/logging.conf
[logger_gunicorn.access]
handlers  = console
propagate = 0
qualname  = gunicorn.access
# Response logging at info
level     = DEBUG
[logger_gunicorn.error]
handlers  = console
propagate = 0
qualname  = gunicorn.error
# Request logging at debug
level     = DEBUG

[logger_requests.packages.urllib3.connectionpool]
handlers = console
qualname = requests.packages.urllib3.connectionpool
# Conn logging at info
level    = INFO

[logger_boto]
handlers = console
qualname = boto
# Noisy at info
level    = WARN

[logger_PIL]
handlers = console
qualname = PIL
# Noisy at debug
level    = INFO
