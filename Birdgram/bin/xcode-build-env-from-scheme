#!/bin/bash -eux
set -o pipefail
#
# Generate .env from $SCHEME_NAME
# - Called from bin/xcode-build-env
# - For https://github.com/luggit/react-native-config

# Log env for debugging
env

# cd to Birdgram/
cd "$BIRDGRAM_DIR"

# e.g. "Birdgram US" -> "Birdgram", "US"
export SCHEME_PREFIX="$(echo "$SCHEME_NAME" | cut -d' ' -f1)"
export SCHEME_SUFFIX="$(echo "$SCHEME_NAME" | cut -d' ' -f2-)"

# Generate .env <- .env.shared + .env.$SCHEME_SUFFIX
env_shared_file=".env.shared";         [ -e "$env_shared_file" ]
env_scheme_file=".env.$SCHEME_SUFFIX"; [ -e "$env_scheme_file" ]
env_file=".env"
(
  echo "# From file[$env_shared_file]"          | sed 's/^/++ /'
  source "$env_shared_file"
  echo                                          | sed 's/^/++ /'
  echo "# From file[$env_scheme_file]"          | sed 's/^/++ /'
  source "$env_scheme_file"
  echo                                          | sed 's/^/++ /'
  echo "# All env vars available during build:" | sed 's/^/++ /'
  env | sort                                    | sed 's/^/++ # /'
# HACK _Very_ brittle ('++ foo=bar')
# - What's a simpler way to allow .env.* files to have vars that depend on other vars in the same file?
) 2>&1 \
  | ack '^\+\+ (\w+=.*|#.*|\s*)$' --output='$1' \
  | ack -v '^export ' \
  >"$env_file"

# HACK Manually edit PRODUCT_BUNDLE_IDENTIFIER in project.pbxproj
# - I can't otherwise find a way to feed it variables (like Info.plist)
# - This creates a problem: modifying project.pbxproj during the build pre-action causes the build to cancel itself
# - Hacky solution: only modify project.pbxproj when its contents need to change (e.g. on scheme switch). This will
#   cause an (annoying) "Build cancelled" on the first build after switching schemes, and then should work normally
#   until you switch schemes again.
# - Previously, I left PRODUCT_BUNDLE_IDENTIFIER unset (in project.pbxproj) and used CFBundleIdentifier (in Info.plist)
#   because I could control it using react-native-config vars (via Info.plist preprocessing), but this approach fell
#   apart # when I tried publishing the app, because the "Validate App" step (after the slow Archive build step) failed
#   on the # missing PRODUCT_BUNDLE_IDENTIFIER
(
  source "$env_file"
  tmp="`mktemp`"
  pbxproj='ios/Birdgram.xcodeproj/project.pbxproj'
  perl -pe >"$tmp" <"$pbxproj" \
    's/(\bPRODUCT_BUNDLE_IDENTIFIER\s*=\s*"app\.birdgram\.)(birdgram-[^"]+)(";)/\1'"$APP_BUNDLE_ID_NAME"'\3/g'
  if ! diff "$tmp" "$pbxproj" >/dev/null; then
    cp -vf "$tmp" "$pbxproj"
  fi
)
